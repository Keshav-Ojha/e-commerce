services:
  api-gateway:
    build:
      context: ./services/gateway
      dockerfile: Dockerfile
    ports:
      - "8222:8222"
    networks:
      - microservices-net
#    environment:
#      - CONFIG_SERVER_URL=http://config-server:8888
    depends_on:
      - config-server

  discovery-server:
    build:
      context: ./services/discovery-server
      dockerfile: Dockerfile
    networks:
      - microservices-net
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - CONFIG_SERVER_URL=http://config-server:8888
    ports:
      - "8761:8761"
    depends_on:
      - config-server

  config-server:
    build:
      context: ./services/config-server
      dockerfile: Dockerfile
    networks:
      - microservices-net
    environment:
      - SPRING_PROFILES_ACTIVE=native
      - EUREKA_SERVER_URL=http://discover-server:8761/eureka/
      - ZIPKIN_SERVER_URL=http://zipkin:9411/api/v2/spans
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8888/actuator/health" ]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 5s

  customer-service:
    build:
      context: ./services/customer # Path to the service directory
      dockerfile: Dockerfile
    networks:
      - microservices-net
    depends_on:
      - mongo
      - config-server
      - discovery-server
      - api-gateway
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  product-service:
    build:
      context: ./services/product # Path to the service directory
      dockerfile: Dockerfile
    networks:
      - microservices-net
    depends_on:
      - postgres
      - config-server
      - discovery-server
      - api-gateway
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  order-service:
    build:
      context: ./services/order # Path to the service directory
      dockerfile: Dockerfile
    networks:
      - microservices-net
    depends_on:
      - postgres
      - config-server
      - discovery-server
      - api-gateway
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  payment-service:
    build:
      context: ./services/payment # Path to the service directory
      dockerfile: Dockerfile
    networks:
      - microservices-net
    depends_on:
      - postgres
      - config-server
      - discovery-server
      - api-gateway
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  notification-service:
    build:
      context: ./services/notification # Path to the service directory
      dockerfile: Dockerfile
    networks:
      - microservices-net
    depends_on:
      - mongo
      - config-server
      - discovery-server
      - api-gateway
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  postgres:
    container_name: ms_pg_sql
    image: postgres
    environment:
      POSTGRES_USER: keshav
      POSTGRES_PASSWORD: keshav
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - 5433:5432
    networks:
      - microservices-net
    restart: unless-stopped

  pgadmin:
    container_name: ms_pg_admin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - 5050:80
    networks:
      - microservices-net
    restart: unless-stopped

  mongo:
    container_name: ms_mongo_db
    image: mongo:7.0
    ports:
      - "27018:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - microservices-net

  mongo-express:
    container_name: ms_mongo_express
    image: mongo-express:1.0.0-alpha.4
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: ""
      ME_CONFIG_MONGODB_ADMINPASSWORD: ""
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    networks:
      - microservices-net

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
      - microservices-net

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: ms_kafka
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    networks:
      - microservices-net

  mail-dev:
    container_name: ms_mail_dev
    image: maildev/maildev
    ports:
      - 1080:1080
      - 1025:1025

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - 9411:9411
    networks:
      - microservices-net

networks:
  microservices-net:
    driver: bridge


volumes:
  postgres:
  pgadmin:
  mongo_data:

